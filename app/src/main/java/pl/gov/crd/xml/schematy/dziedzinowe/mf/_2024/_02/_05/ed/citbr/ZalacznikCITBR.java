//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.4 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package pl.gov.crd.xml.schematy.dziedzinowe.mf._2024._02._05.ed.citbr;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import pl.gov.crd.xml.schematy.dziedzinowe.mf._2023._09._06.ed.kodykrajow.TKodKraju;


/**
 * <p>Java class for anonymous complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="Naglowek" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TNaglowek_CIT_BR"/>
 *         <element name="PozycjeSzczegolowe">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <sequence>
 *                     <element name="P_8" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
 *                     <sequence minOccurs="0">
 *                       <element name="P_9" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData"/>
 *                       <element name="P_10" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData"/>
 *                     </sequence>
 *                     <element name="P_11" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2" minOccurs="0"/>
 *                   </sequence>
 *                   <sequence minOccurs="0">
 *                     <element name="P_12" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_13" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_14" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_15" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_16" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_17" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_18" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_19" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_20" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_21" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_22" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_23" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_24" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_25" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_26" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_27" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_28" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_29" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_30" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_31" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                   </sequence>
 *                   <sequence minOccurs="0">
 *                     <element name="P_32" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_33" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_34" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_35" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_36" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna"/>
 *                   </sequence>
 *                   <sequence>
 *                     <sequence>
 *                       <element name="P_37" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                       <element name="P_38" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                       <sequence minOccurs="0">
 *                         <element name="P_39" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_40" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_41" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_42" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_43" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_44" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_45" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_46" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_47" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_48" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_49" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_50" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_51" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_52" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_53" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_54" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_55" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_56" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_57" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_58" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_59" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_60" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_61" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_62" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_63" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_64" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_65" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_66" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_67" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_68" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_69" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_70" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_71" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <sequence minOccurs="0">
 *                         <element name="P_72" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_73" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
 *                         <element name="P_74" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
 *                       </sequence>
 *                       <element name="P_75" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna"/>
 *                     </sequence>
 *                     <element name="P_76" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_77" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <element name="P_78" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna"/>
 *                     <element name="P_79" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                   </sequence>
 *                   <sequence minOccurs="0">
 *                     <element name="P_80" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     <sequence minOccurs="0">
 *                       <element name="P_81" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                       <element name="P_82" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     </sequence>
 *                     <element name="P_83" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                   </sequence>
 *                   <sequence minOccurs="0">
 *                     <sequence>
 *                       <element name="P_84">
 *                         <simpleType>
 *                           <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *                             <minLength value="1"/>
 *                             <maxLength value="240"/>
 *                           </restriction>
 *                         </simpleType>
 *                       </element>
 *                       <element name="P_85" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrNIP"/>
 *                       <element name="P_86" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
 *                     </sequence>
 *                     <sequence minOccurs="0">
 *                       <element name="P_87" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                       <sequence minOccurs="0">
 *                         <element name="P_88" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                         <element name="P_89" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                       </sequence>
 *                       <element name="P_90" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
 *                     </sequence>
 *                   </sequence>
 *                   <sequence>
 *                     <element name="P_91" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
 *                     <element name="P_92" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
 *                     <sequence minOccurs="0">
 *                       <element name="P_93_1" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1" minOccurs="0"/>
 *                       <element name="P_93_2" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1" minOccurs="0"/>
 *                     </sequence>
 *                   </sequence>
 *                   <element name="P_F" maxOccurs="unbounded" minOccurs="0">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <sequence>
 *                             <element name="P_F94">
 *                               <simpleType>
 *                                 <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *                                   <minLength value="1"/>
 *                                   <maxLength value="240"/>
 *                                 </restriction>
 *                               </simpleType>
 *                             </element>
 *                             <element name="P_F95A" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2023/09/06/eD/KodyKrajow/}TKodKraju"/>
 *                             <element name="P_F96" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
 *                             <element name="P_F97" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
 *                             <element name="P_F98" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
 *                             <element name="P_F99" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TUlica" minOccurs="0"/>
 *                             <element name="P_F100" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrBudynku" minOccurs="0"/>
 *                             <element name="P_F101" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrLokalu" minOccurs="0"/>
 *                             <element name="P_F102" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TMiejscowosc"/>
 *                             <element name="P_F103" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKodPocztowy" minOccurs="0"/>
 *                           </sequence>
 *                           <attribute name="typ" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" fixed="G" />
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "naglowek",
    "pozycjeSzczegolowe"
})
@XmlRootElement(name = "Zalacznik_CIT_BR")
public class ZalacznikCITBR {

    @XmlElement(name = "Naglowek", required = true)
    protected TNaglowekCITBR naglowek;
    /**
     * Odliczenie od podstawy opodatkowania kosztów kwalifikowanych oraz obliczenie kwoty przysługującej podatnikowi, o której mowa w art. 18da ustawy, rodzaje działalności badawczo-rozwojowej, w ramach których są ponoszone koszty kwalifikowane, dane jednostki naukowej
     * 
     */
    @XmlElement(name = "PozycjeSzczegolowe", required = true)
    protected PozycjeSzczegolowe pozycjeSzczegolowe;

    /**
     * Gets the value of the naglowek property.
     * 
     * @return
     *     possible object is
     *     {@link TNaglowekCITBR }
     *     
     */
    public TNaglowekCITBR getNaglowek() {
        return naglowek;
    }

    /**
     * Sets the value of the naglowek property.
     * 
     * @param value
     *     allowed object is
     *     {@link TNaglowekCITBR }
     *     
     */
    public void setNaglowek(TNaglowekCITBR value) {
        this.naglowek = value;
    }

    /**
     * Odliczenie od podstawy opodatkowania kosztów kwalifikowanych oraz obliczenie kwoty przysługującej podatnikowi, o której mowa w art. 18da ustawy, rodzaje działalności badawczo-rozwojowej, w ramach których są ponoszone koszty kwalifikowane, dane jednostki naukowej
     * 
     * @return
     *     possible object is
     *     {@link PozycjeSzczegolowe }
     *     
     */
    public PozycjeSzczegolowe getPozycjeSzczegolowe() {
        return pozycjeSzczegolowe;
    }

    /**
     * Sets the value of the pozycjeSzczegolowe property.
     * 
     * @param value
     *     allowed object is
     *     {@link PozycjeSzczegolowe }
     *     
     * @see #getPozycjeSzczegolowe()
     */
    public void setPozycjeSzczegolowe( PozycjeSzczegolowe value) {
        this.pozycjeSzczegolowe = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <sequence>
     *           <element name="P_8" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
     *           <sequence minOccurs="0">
     *             <element name="P_9" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData"/>
     *             <element name="P_10" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData"/>
     *           </sequence>
     *           <element name="P_11" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2" minOccurs="0"/>
     *         </sequence>
     *         <sequence minOccurs="0">
     *           <element name="P_12" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_13" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_14" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_15" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_16" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_17" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_18" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_19" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_20" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_21" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_22" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_23" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_24" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_25" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_26" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_27" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_28" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_29" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_30" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_31" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *         </sequence>
     *         <sequence minOccurs="0">
     *           <element name="P_32" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_33" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_34" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_35" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_36" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna"/>
     *         </sequence>
     *         <sequence>
     *           <sequence>
     *             <element name="P_37" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *             <element name="P_38" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *             <sequence minOccurs="0">
     *               <element name="P_39" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_40" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_41" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_42" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_43" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_44" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_45" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_46" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_47" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_48" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_49" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_50" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_51" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_52" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_53" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_54" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_55" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_56" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_57" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_58" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_59" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_60" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_61" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_62" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_63" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_64" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_65" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_66" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_67" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_68" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_69" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_70" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_71" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <sequence minOccurs="0">
     *               <element name="P_72" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_73" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TLData1"/>
     *               <element name="P_74" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2024/02/05/eD/CITBR/}TKwotaKosztow"/>
     *             </sequence>
     *             <element name="P_75" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna"/>
     *           </sequence>
     *           <element name="P_76" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_77" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <element name="P_78" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna"/>
     *           <element name="P_79" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *         </sequence>
     *         <sequence minOccurs="0">
     *           <element name="P_80" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           <sequence minOccurs="0">
     *             <element name="P_81" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *             <element name="P_82" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           </sequence>
     *           <element name="P_83" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *         </sequence>
     *         <sequence minOccurs="0">
     *           <sequence>
     *             <element name="P_84">
     *               <simpleType>
     *                 <restriction base="{http://www.w3.org/2001/XMLSchema}token">
     *                   <minLength value="1"/>
     *                   <maxLength value="240"/>
     *                 </restriction>
     *               </simpleType>
     *             </element>
     *             <element name="P_85" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrNIP"/>
     *             <element name="P_86" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
     *           </sequence>
     *           <sequence minOccurs="0">
     *             <element name="P_87" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *             <sequence minOccurs="0">
     *               <element name="P_88" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *               <element name="P_89" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *             </sequence>
     *             <element name="P_90" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKwota2Nieujemna" minOccurs="0"/>
     *           </sequence>
     *         </sequence>
     *         <sequence>
     *           <element name="P_91" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
     *           <element name="P_92" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1_2"/>
     *           <sequence minOccurs="0">
     *             <element name="P_93_1" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1" minOccurs="0"/>
     *             <element name="P_93_2" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TWybor1" minOccurs="0"/>
     *           </sequence>
     *         </sequence>
     *         <element name="P_F" maxOccurs="unbounded" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <sequence>
     *                   <element name="P_F94">
     *                     <simpleType>
     *                       <restriction base="{http://www.w3.org/2001/XMLSchema}token">
     *                         <minLength value="1"/>
     *                         <maxLength value="240"/>
     *                       </restriction>
     *                     </simpleType>
     *                   </element>
     *                   <element name="P_F95A" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2023/09/06/eD/KodyKrajow/}TKodKraju"/>
     *                   <element name="P_F96" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
     *                   <element name="P_F97" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
     *                   <element name="P_F98" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
     *                   <element name="P_F99" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TUlica" minOccurs="0"/>
     *                   <element name="P_F100" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrBudynku" minOccurs="0"/>
     *                   <element name="P_F101" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrLokalu" minOccurs="0"/>
     *                   <element name="P_F102" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TMiejscowosc"/>
     *                   <element name="P_F103" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKodPocztowy" minOccurs="0"/>
     *                 </sequence>
     *                 <attribute name="typ" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" fixed="G" />
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "p8",
        "p9",
        "p10",
        "p11",
        "p12",
        "p13",
        "p14",
        "p15",
        "p16",
        "p17",
        "p18",
        "p19",
        "p20",
        "p21",
        "p22",
        "p23",
        "p24",
        "p25",
        "p26",
        "p27",
        "p28",
        "p29",
        "p30",
        "p31",
        "p32",
        "p33",
        "p34",
        "p35",
        "p36",
        "p37",
        "p38",
        "p39",
        "p40",
        "p41",
        "p42",
        "p43",
        "p44",
        "p45",
        "p46",
        "p47",
        "p48",
        "p49",
        "p50",
        "p51",
        "p52",
        "p53",
        "p54",
        "p55",
        "p56",
        "p57",
        "p58",
        "p59",
        "p60",
        "p61",
        "p62",
        "p63",
        "p64",
        "p65",
        "p66",
        "p67",
        "p68",
        "p69",
        "p70",
        "p71",
        "p72",
        "p73",
        "p74",
        "p75",
        "p76",
        "p77",
        "p78",
        "p79",
        "p80",
        "p81",
        "p82",
        "p83",
        "p84",
        "p85",
        "p86",
        "p87",
        "p88",
        "p89",
        "p90",
        "p91",
        "p92",
        "p931",
        "p932",
        "pf"
    })
    public static class PozycjeSzczegolowe {

        /**
         * Podatnik posiadał w roku podatkowym status centrum badawczo-rozwojowego w rozumieniu art. 17 ustawy z dnia 30 maja 2008 r. o niektórych
         * formach wspierania działalności innowacyjnej (Dz. U. z 2022 r. poz. 2474, z poźn. zm.). Wybór: 1 - tak, 2 - nie
         * 
         */
        @XmlElement(name = "P_8")
        protected byte p8;
        /**
         * Podatnik w roku podatkowym posiadał status centrum badawczo-rozwojowego w okresie - Od
         * 
         */
        @XmlElement(name = "P_9")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p9;
        /**
         * Podatnik w roku podatkowym posiadał status centrum badawczo-rozwojowego w okresie - Do
         * 
         */
        @XmlElement(name = "P_10")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p10;
        /**
         * Podatnik był w roku podatkowym mikroprzedsiębiorcą, małym lub średnim przedsiębiorcą w rozumieniu odrębnych przepisów. Wybór: 1 - tak, 2 - nie
         * 
         */
        @XmlElement(name = "P_11")
        protected Byte p11;
        /**
         * Koszty kwalifikowane dotyczące należności i składek, o których mowa w art. 18d ust. 2 pkt 1 i 1a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_12")
        protected BigDecimal p12;
        /**
         * Koszty kwalifikowane dotyczące należności i składek, o których mowa w art. 18d ust. 2 pkt 1 i 1a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_13")
        protected BigDecimal p13;
        /**
         * Koszty kwalifikowane dotyczące nabycia materiałów i surowców, o których mowa w art. 18d ust. 2 pkt 2 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_14")
        protected BigDecimal p14;
        /**
         * Koszty kwalifikowane dotyczące nabycia materiałów i surowców, o których mowa w art. 18d ust. 2 pkt 2 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_15")
        protected BigDecimal p15;
        /**
         * Koszty kwalifikowane dotyczące nabycia niebędącego środkami trwałymi sprzętu specjalistycznego, o którym mowa w art. 18d ust. 2 pkt 2a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_16")
        protected BigDecimal p16;
        /**
         * Koszty kwalifikowane dotyczące nabycia niebędącego środkami trwałymi sprzętu specjalistycznego, o którym mowa w art. 18d ust. 2 pkt 2a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_17")
        protected BigDecimal p17;
        /**
         * Koszty kwalifikowane dotyczące m.in. ekspertyz, opinii, usług doradczych, o których mowa w art. 18d ust. 2 pkt 3 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_18")
        protected BigDecimal p18;
        /**
         * Koszty kwalifikowane dotyczące m.in. ekspertyz, opinii, usług doradczych, o których mowa w art. 18d ust. 2 pkt 3 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_19")
        protected BigDecimal p19;
        /**
         * Koszty kwalifikowane dotyczące odpłatnego korzystania z aparatury naukowo-badawczej, o których mowa w art. 18d ust. 2 pkt 4 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_20")
        protected BigDecimal p20;
        /**
         * Koszty kwalifikowane dotyczące odpłatnego korzystania z aparatury naukowo-badawczej, o których mowa w art. 18d ust. 2 pkt 4 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_21")
        protected BigDecimal p21;
        /**
         * Koszty kwalifikowane dotyczące nabycia usługi wykorzystania aparatury naukowo- -badawczej, o których mowa w art. 18d ust. 2 pkt 4a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_22")
        protected BigDecimal p22;
        /**
         * Koszty kwalifikowane dotyczące nabycia usługi wykorzystania aparatury naukowo-badawczej, o których mowa w art. 18d ust. 2 pkt 4a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_23")
        protected BigDecimal p23;
        /**
         * Koszty kwalifikowane dotyczące uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego, o których mowa w art. 18d ust. 2 pkt 5 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_24")
        protected BigDecimal p24;
        /**
         * Koszty kwalifikowane dotyczące uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego, o których mowa w art. 18d ust. 2 pkt 5 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_25")
        protected BigDecimal p25;
        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych od kosztów prac rozwojowych, o których mowa w art. 18d ust. 2a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_26")
        protected BigDecimal p26;
        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych od kosztów prac rozwojowych, o których mowa w art. 18d ust. 2a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_27")
        protected BigDecimal p27;
        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych, o których mowa w art. 18d ust. 3 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_28")
        protected BigDecimal p28;
        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych, o których mowa w art. 18d ust. 3 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_29")
        protected BigDecimal p29;
        /**
         * Razem koszty kwalifikowane. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_30")
        protected BigDecimal p30;
        /**
         * Razem koszty kwalifikowane. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         */
        @XmlElement(name = "P_31")
        protected BigDecimal p31;
        /**
         * Dodatkowe odliczenia na podstawie art. 18d ust. 7 pkt 1 ustawy
         * 
         */
        @XmlElement(name = "P_32")
        protected BigDecimal p32;
        /**
         * Dodatkowe odliczenia na podstawie art. 18d ust. 7 pkt 2 ustawy
         * 
         */
        @XmlElement(name = "P_33")
        protected BigDecimal p33;
        /**
         * Dodatkowe koszty kwalifikowane w zakresie odpisów amortyzacyjnych od budowli, budynków i lokali na podstawie art. 18d ust. 3a pkt 1 ustawy
         * 
         */
        @XmlElement(name = "P_34")
        protected BigDecimal p34;
        /**
         * Dodatkowe koszty kwalifikowane dot. m.in. ekspertyz, opinii, usług doradczych i usług równorzędnych, badań wykonywanych na podstawie umowy, wiedzy technicznej i patentów lub licencji na chroniony wynalazek, uzyskanych od podmiotów innych niż jednostki naukowe na podstawie art. 18d ust. 3a pkt 2 ustawy
         * 
         */
        @XmlElement(name = "P_35")
        protected BigDecimal p35;
        /**
         * Razem dodatkowe odliczenia
         * 
         */
        @XmlElement(name = "P_36")
        protected BigDecimal p36;
        /**
         * Łączne odliczenia na podstawie art. 18d ust. 7 pkt 3 ustawy
         * 
         */
        @XmlElement(name = "P_37")
        protected BigDecimal p37;
        /**
         * Łączne odliczenia na podstawie art. 18d ust. 7 pkt 1 i 2 ustawy
         * 
         */
        @XmlElement(name = "P_38")
        protected BigDecimal p38;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         */
        @XmlElement(name = "P_39")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p39;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         */
        @XmlElement(name = "P_40")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p40;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         */
        @XmlElement(name = "P_41")
        protected BigDecimal p41;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         */
        @XmlElement(name = "P_42")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p42;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         */
        @XmlElement(name = "P_43")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p43;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         */
        @XmlElement(name = "P_44")
        protected BigDecimal p44;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         */
        @XmlElement(name = "P_45")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p45;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         */
        @XmlElement(name = "P_46")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p46;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         */
        @XmlElement(name = "P_47")
        protected BigDecimal p47;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         */
        @XmlElement(name = "P_48")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p48;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         */
        @XmlElement(name = "P_49")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p49;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         */
        @XmlElement(name = "P_50")
        protected BigDecimal p50;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         */
        @XmlElement(name = "P_51")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p51;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         */
        @XmlElement(name = "P_52")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p52;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         */
        @XmlElement(name = "P_53")
        protected BigDecimal p53;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         */
        @XmlElement(name = "P_54")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p54;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         */
        @XmlElement(name = "P_55")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p55;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         */
        @XmlElement(name = "P_56")
        protected BigDecimal p56;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         */
        @XmlElement(name = "P_57")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p57;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         */
        @XmlElement(name = "P_58")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p58;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         */
        @XmlElement(name = "P_59")
        protected BigDecimal p59;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         */
        @XmlElement(name = "P_60")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p60;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         */
        @XmlElement(name = "P_61")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p61;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         */
        @XmlElement(name = "P_62")
        protected BigDecimal p62;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         */
        @XmlElement(name = "P_63")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p63;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         */
        @XmlElement(name = "P_64")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p64;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         */
        @XmlElement(name = "P_65")
        protected BigDecimal p65;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         */
        @XmlElement(name = "P_66")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p66;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         */
        @XmlElement(name = "P_67")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p67;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         */
        @XmlElement(name = "P_68")
        protected BigDecimal p68;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         */
        @XmlElement(name = "P_69")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p69;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         */
        @XmlElement(name = "P_70")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p70;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         */
        @XmlElement(name = "P_71")
        protected BigDecimal p71;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         */
        @XmlElement(name = "P_72")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p72;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         */
        @XmlElement(name = "P_73")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar p73;
        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         */
        @XmlElement(name = "P_74")
        protected BigDecimal p74;
        /**
         * Razem łączne odliczenia
         * 
         */
        @XmlElement(name = "P_75", required = true)
        protected BigDecimal p75;
        /**
         * Koszty kwalifikowane do odliczenia w roku podatkowym
         * 
         */
        @XmlElement(name = "P_76")
        protected BigDecimal p76;
        /**
         * Kwota, o której mowa w art. 18d ust. 5a ustawy zwiększająca podstawę opodatkowania / zmniejszająca stratę
         * 
         */
        @XmlElement(name = "P_77")
        protected BigDecimal p77;
        /**
         * Kwota przysługująca podatnikowi na podstawie art. 18da ust. 1 i 2 ustawy
         * 
         */
        @XmlElement(name = "P_78", required = true)
        protected BigDecimal p78;
        /**
         * Kwota podlegająca zwrotowi do urzędu skarbowego na podstawie art. 18da ust. 5a ustawy
         * 
         */
        @XmlElement(name = "P_79")
        protected BigDecimal p79;
        /**
         * Odliczenia z tytułu prac rozwojowych
         * 
         */
        @XmlElement(name = "P_80")
        protected BigDecimal p80;
        /**
         * Badania podstawowe
         * 
         */
        @XmlElement(name = "P_81")
        protected BigDecimal p81;
        /**
         * Badania aplikacyjne
         * 
         */
        @XmlElement(name = "P_82")
        protected BigDecimal p82;
        /**
         * Odliczenia z tytułu uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego
         * 
         */
        @XmlElement(name = "P_83")
        protected BigDecimal p83;
        /**
         * Nazwa pełna
         * 
         */
        @XmlElement(name = "P_84")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String p84;
        /**
         * Identyfikator podatkowy NIP
         * 
         */
        @XmlElement(name = "P_85")
        protected String p85;
        /**
         * Spółka jest mikroprzedsiębiorcą, małym lub średnim przedsiębiorcą w rozumieniu odrębnych przepisów: 1 - tak, 2 - nie
         * 
         */
        @XmlElement(name = "P_86")
        protected Byte p86;
        /**
         * Odliczenia z tytułu prac rozwojowych
         * 
         */
        @XmlElement(name = "P_87")
        protected BigDecimal p87;
        /**
         * Badania podstawowe
         * 
         */
        @XmlElement(name = "P_88")
        protected BigDecimal p88;
        /**
         * Badania aplikacyjne
         * 
         */
        @XmlElement(name = "P_89")
        protected BigDecimal p89;
        /**
         * Odliczenia z tytułu uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego
         * 
         */
        @XmlElement(name = "P_90")
        protected BigDecimal p90;
        /**
         * Badania naukowe: 1 - tak, 2 - nie
         * 
         */
        @XmlElement(name = "P_91")
        protected byte p91;
        /**
         * Prace rozwojowe: 1 - tak, 2 - nie
         * 
         */
        @XmlElement(name = "P_92")
        protected byte p92;
        /**
         * Rodzaj badań naukowych: 1 - badania podstawowe
         * 
         */
        @XmlElement(name = "P_93_1")
        protected Byte p931;
        /**
         * Rodzaj badań naukowych: 1 - badania aplikacyjne
         * 
         */
        @XmlElement(name = "P_93_2")
        protected Byte p932;
        /**
         * F. Dane jednostki naukowej
         * 
         */
        @XmlElement(name = "P_F")
        protected List<PF> pf;

        /**
         * Podatnik posiadał w roku podatkowym status centrum badawczo-rozwojowego w rozumieniu art. 17 ustawy z dnia 30 maja 2008 r. o niektórych
         * formach wspierania działalności innowacyjnej (Dz. U. z 2022 r. poz. 2474, z poźn. zm.). Wybór: 1 - tak, 2 - nie
         * 
         */
        public byte getP8() {
            return p8;
        }

        /**
         * Sets the value of the p8 property.
         * 
         */
        public void setP8(byte value) {
            this.p8 = value;
        }

        /**
         * Podatnik w roku podatkowym posiadał status centrum badawczo-rozwojowego w okresie - Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP9() {
            return p9;
        }

        /**
         * Sets the value of the p9 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP9()
         */
        public void setP9(XMLGregorianCalendar value) {
            this.p9 = value;
        }

        /**
         * Podatnik w roku podatkowym posiadał status centrum badawczo-rozwojowego w okresie - Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP10() {
            return p10;
        }

        /**
         * Sets the value of the p10 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP10()
         */
        public void setP10(XMLGregorianCalendar value) {
            this.p10 = value;
        }

        /**
         * Podatnik był w roku podatkowym mikroprzedsiębiorcą, małym lub średnim przedsiębiorcą w rozumieniu odrębnych przepisów. Wybór: 1 - tak, 2 - nie
         * 
         * @return
         *     possible object is
         *     {@link Byte }
         *     
         */
        public Byte getP11() {
            return p11;
        }

        /**
         * Sets the value of the p11 property.
         * 
         * @param value
         *     allowed object is
         *     {@link Byte }
         *     
         * @see #getP11()
         */
        public void setP11(Byte value) {
            this.p11 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące należności i składek, o których mowa w art. 18d ust. 2 pkt 1 i 1a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP12() {
            return p12;
        }

        /**
         * Sets the value of the p12 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP12()
         */
        public void setP12(BigDecimal value) {
            this.p12 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące należności i składek, o których mowa w art. 18d ust. 2 pkt 1 i 1a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP13() {
            return p13;
        }

        /**
         * Sets the value of the p13 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP13()
         */
        public void setP13(BigDecimal value) {
            this.p13 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące nabycia materiałów i surowców, o których mowa w art. 18d ust. 2 pkt 2 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP14() {
            return p14;
        }

        /**
         * Sets the value of the p14 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP14()
         */
        public void setP14(BigDecimal value) {
            this.p14 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące nabycia materiałów i surowców, o których mowa w art. 18d ust. 2 pkt 2 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP15() {
            return p15;
        }

        /**
         * Sets the value of the p15 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP15()
         */
        public void setP15(BigDecimal value) {
            this.p15 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące nabycia niebędącego środkami trwałymi sprzętu specjalistycznego, o którym mowa w art. 18d ust. 2 pkt 2a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP16() {
            return p16;
        }

        /**
         * Sets the value of the p16 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP16()
         */
        public void setP16(BigDecimal value) {
            this.p16 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące nabycia niebędącego środkami trwałymi sprzętu specjalistycznego, o którym mowa w art. 18d ust. 2 pkt 2a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP17() {
            return p17;
        }

        /**
         * Sets the value of the p17 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP17()
         */
        public void setP17(BigDecimal value) {
            this.p17 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące m.in. ekspertyz, opinii, usług doradczych, o których mowa w art. 18d ust. 2 pkt 3 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP18() {
            return p18;
        }

        /**
         * Sets the value of the p18 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP18()
         */
        public void setP18(BigDecimal value) {
            this.p18 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące m.in. ekspertyz, opinii, usług doradczych, o których mowa w art. 18d ust. 2 pkt 3 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP19() {
            return p19;
        }

        /**
         * Sets the value of the p19 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP19()
         */
        public void setP19(BigDecimal value) {
            this.p19 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące odpłatnego korzystania z aparatury naukowo-badawczej, o których mowa w art. 18d ust. 2 pkt 4 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP20() {
            return p20;
        }

        /**
         * Sets the value of the p20 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP20()
         */
        public void setP20(BigDecimal value) {
            this.p20 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące odpłatnego korzystania z aparatury naukowo-badawczej, o których mowa w art. 18d ust. 2 pkt 4 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP21() {
            return p21;
        }

        /**
         * Sets the value of the p21 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP21()
         */
        public void setP21(BigDecimal value) {
            this.p21 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące nabycia usługi wykorzystania aparatury naukowo- -badawczej, o których mowa w art. 18d ust. 2 pkt 4a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP22() {
            return p22;
        }

        /**
         * Sets the value of the p22 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP22()
         */
        public void setP22(BigDecimal value) {
            this.p22 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące nabycia usługi wykorzystania aparatury naukowo-badawczej, o których mowa w art. 18d ust. 2 pkt 4a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP23() {
            return p23;
        }

        /**
         * Sets the value of the p23 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP23()
         */
        public void setP23(BigDecimal value) {
            this.p23 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego, o których mowa w art. 18d ust. 2 pkt 5 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP24() {
            return p24;
        }

        /**
         * Sets the value of the p24 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP24()
         */
        public void setP24(BigDecimal value) {
            this.p24 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego, o których mowa w art. 18d ust. 2 pkt 5 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP25() {
            return p25;
        }

        /**
         * Sets the value of the p25 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP25()
         */
        public void setP25(BigDecimal value) {
            this.p25 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych od kosztów prac rozwojowych, o których mowa w art. 18d ust. 2a ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP26() {
            return p26;
        }

        /**
         * Sets the value of the p26 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP26()
         */
        public void setP26(BigDecimal value) {
            this.p26 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych od kosztów prac rozwojowych, o których mowa w art. 18d ust. 2a ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP27() {
            return p27;
        }

        /**
         * Sets the value of the p27 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP27()
         */
        public void setP27(BigDecimal value) {
            this.p27 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych, o których mowa w art. 18d ust. 3 ustawy. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP28() {
            return p28;
        }

        /**
         * Sets the value of the p28 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP28()
         */
        public void setP28(BigDecimal value) {
            this.p28 = value;
        }

        /**
         * Koszty kwalifikowane dotyczące odpisów amortyzacyjnych, o których mowa w art. 18d ust. 3 ustawy. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP29() {
            return p29;
        }

        /**
         * Sets the value of the p29 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP29()
         */
        public void setP29(BigDecimal value) {
            this.p29 = value;
        }

        /**
         * Razem koszty kwalifikowane. Koszty kwalifikowane przypadające na podatnika nieposiadającego statusu centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP30() {
            return p30;
        }

        /**
         * Sets the value of the p30 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP30()
         */
        public void setP30(BigDecimal value) {
            this.p30 = value;
        }

        /**
         * Razem koszty kwalifikowane. Koszty kwalifikowane przypadające na podatnika posiadającego status centrum badawczo-rozwojowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP31() {
            return p31;
        }

        /**
         * Sets the value of the p31 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP31()
         */
        public void setP31(BigDecimal value) {
            this.p31 = value;
        }

        /**
         * Dodatkowe odliczenia na podstawie art. 18d ust. 7 pkt 1 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP32() {
            return p32;
        }

        /**
         * Sets the value of the p32 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP32()
         */
        public void setP32(BigDecimal value) {
            this.p32 = value;
        }

        /**
         * Dodatkowe odliczenia na podstawie art. 18d ust. 7 pkt 2 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP33() {
            return p33;
        }

        /**
         * Sets the value of the p33 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP33()
         */
        public void setP33(BigDecimal value) {
            this.p33 = value;
        }

        /**
         * Dodatkowe koszty kwalifikowane w zakresie odpisów amortyzacyjnych od budowli, budynków i lokali na podstawie art. 18d ust. 3a pkt 1 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP34() {
            return p34;
        }

        /**
         * Sets the value of the p34 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP34()
         */
        public void setP34(BigDecimal value) {
            this.p34 = value;
        }

        /**
         * Dodatkowe koszty kwalifikowane dot. m.in. ekspertyz, opinii, usług doradczych i usług równorzędnych, badań wykonywanych na podstawie umowy, wiedzy technicznej i patentów lub licencji na chroniony wynalazek, uzyskanych od podmiotów innych niż jednostki naukowe na podstawie art. 18d ust. 3a pkt 2 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP35() {
            return p35;
        }

        /**
         * Sets the value of the p35 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP35()
         */
        public void setP35(BigDecimal value) {
            this.p35 = value;
        }

        /**
         * Razem dodatkowe odliczenia
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP36() {
            return p36;
        }

        /**
         * Sets the value of the p36 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP36()
         */
        public void setP36(BigDecimal value) {
            this.p36 = value;
        }

        /**
         * Łączne odliczenia na podstawie art. 18d ust. 7 pkt 3 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP37() {
            return p37;
        }

        /**
         * Sets the value of the p37 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP37()
         */
        public void setP37(BigDecimal value) {
            this.p37 = value;
        }

        /**
         * Łączne odliczenia na podstawie art. 18d ust. 7 pkt 1 i 2 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP38() {
            return p38;
        }

        /**
         * Sets the value of the p38 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP38()
         */
        public void setP38(BigDecimal value) {
            this.p38 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP39() {
            return p39;
        }

        /**
         * Sets the value of the p39 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP39()
         */
        public void setP39(XMLGregorianCalendar value) {
            this.p39 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP40() {
            return p40;
        }

        /**
         * Sets the value of the p40 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP40()
         */
        public void setP40(XMLGregorianCalendar value) {
            this.p40 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP41() {
            return p41;
        }

        /**
         * Sets the value of the p41 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP41()
         */
        public void setP41(BigDecimal value) {
            this.p41 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP42() {
            return p42;
        }

        /**
         * Sets the value of the p42 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP42()
         */
        public void setP42(XMLGregorianCalendar value) {
            this.p42 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP43() {
            return p43;
        }

        /**
         * Sets the value of the p43 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP43()
         */
        public void setP43(XMLGregorianCalendar value) {
            this.p43 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP44() {
            return p44;
        }

        /**
         * Sets the value of the p44 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP44()
         */
        public void setP44(BigDecimal value) {
            this.p44 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP45() {
            return p45;
        }

        /**
         * Sets the value of the p45 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP45()
         */
        public void setP45(XMLGregorianCalendar value) {
            this.p45 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP46() {
            return p46;
        }

        /**
         * Sets the value of the p46 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP46()
         */
        public void setP46(XMLGregorianCalendar value) {
            this.p46 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP47() {
            return p47;
        }

        /**
         * Sets the value of the p47 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP47()
         */
        public void setP47(BigDecimal value) {
            this.p47 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP48() {
            return p48;
        }

        /**
         * Sets the value of the p48 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP48()
         */
        public void setP48(XMLGregorianCalendar value) {
            this.p48 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP49() {
            return p49;
        }

        /**
         * Sets the value of the p49 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP49()
         */
        public void setP49(XMLGregorianCalendar value) {
            this.p49 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP50() {
            return p50;
        }

        /**
         * Sets the value of the p50 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP50()
         */
        public void setP50(BigDecimal value) {
            this.p50 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP51() {
            return p51;
        }

        /**
         * Sets the value of the p51 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP51()
         */
        public void setP51(XMLGregorianCalendar value) {
            this.p51 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP52() {
            return p52;
        }

        /**
         * Sets the value of the p52 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP52()
         */
        public void setP52(XMLGregorianCalendar value) {
            this.p52 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP53() {
            return p53;
        }

        /**
         * Sets the value of the p53 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP53()
         */
        public void setP53(BigDecimal value) {
            this.p53 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP54() {
            return p54;
        }

        /**
         * Sets the value of the p54 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP54()
         */
        public void setP54(XMLGregorianCalendar value) {
            this.p54 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP55() {
            return p55;
        }

        /**
         * Sets the value of the p55 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP55()
         */
        public void setP55(XMLGregorianCalendar value) {
            this.p55 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 12-29) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP56() {
            return p56;
        }

        /**
         * Sets the value of the p56 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP56()
         */
        public void setP56(BigDecimal value) {
            this.p56 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP57() {
            return p57;
        }

        /**
         * Sets the value of the p57 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP57()
         */
        public void setP57(XMLGregorianCalendar value) {
            this.p57 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP58() {
            return p58;
        }

        /**
         * Sets the value of the p58 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP58()
         */
        public void setP58(XMLGregorianCalendar value) {
            this.p58 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP59() {
            return p59;
        }

        /**
         * Sets the value of the p59 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP59()
         */
        public void setP59(BigDecimal value) {
            this.p59 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP60() {
            return p60;
        }

        /**
         * Sets the value of the p60 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP60()
         */
        public void setP60(XMLGregorianCalendar value) {
            this.p60 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP61() {
            return p61;
        }

        /**
         * Sets the value of the p61 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP61()
         */
        public void setP61(XMLGregorianCalendar value) {
            this.p61 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP62() {
            return p62;
        }

        /**
         * Sets the value of the p62 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP62()
         */
        public void setP62(BigDecimal value) {
            this.p62 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP63() {
            return p63;
        }

        /**
         * Sets the value of the p63 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP63()
         */
        public void setP63(XMLGregorianCalendar value) {
            this.p63 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP64() {
            return p64;
        }

        /**
         * Sets the value of the p64 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP64()
         */
        public void setP64(XMLGregorianCalendar value) {
            this.p64 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP65() {
            return p65;
        }

        /**
         * Sets the value of the p65 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP65()
         */
        public void setP65(BigDecimal value) {
            this.p65 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP66() {
            return p66;
        }

        /**
         * Sets the value of the p66 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP66()
         */
        public void setP66(XMLGregorianCalendar value) {
            this.p66 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP67() {
            return p67;
        }

        /**
         * Sets the value of the p67 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP67()
         */
        public void setP67(XMLGregorianCalendar value) {
            this.p67 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP68() {
            return p68;
        }

        /**
         * Sets the value of the p68 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP68()
         */
        public void setP68(BigDecimal value) {
            this.p68 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP69() {
            return p69;
        }

        /**
         * Sets the value of the p69 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP69()
         */
        public void setP69(XMLGregorianCalendar value) {
            this.p69 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP70() {
            return p70;
        }

        /**
         * Sets the value of the p70 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP70()
         */
        public void setP70(XMLGregorianCalendar value) {
            this.p70 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP71() {
            return p71;
        }

        /**
         * Sets the value of the p71 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP71()
         */
        public void setP71(BigDecimal value) {
            this.p71 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Od
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP72() {
            return p72;
        }

        /**
         * Sets the value of the p72 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP72()
         */
        public void setP72(XMLGregorianCalendar value) {
            this.p72 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Data Do
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getP73() {
            return p73;
        }

        /**
         * Sets the value of the p73 property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getP73()
         */
        public void setP73(XMLGregorianCalendar value) {
            this.p73 = value;
        }

        /**
         * Koszty kwalifikowane nieodliczone w poprzednich latach podlegające odliczeniu w roku podatkowym na podstawie art. 18d ust. 8 ustawy (obejmuje rodzaje kosztów wykazanych w poz. 32-35) - Kwota
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP74() {
            return p74;
        }

        /**
         * Sets the value of the p74 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP74()
         */
        public void setP74(BigDecimal value) {
            this.p74 = value;
        }

        /**
         * Razem łączne odliczenia
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP75() {
            return p75;
        }

        /**
         * Sets the value of the p75 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP75()
         */
        public void setP75(BigDecimal value) {
            this.p75 = value;
        }

        /**
         * Koszty kwalifikowane do odliczenia w roku podatkowym
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP76() {
            return p76;
        }

        /**
         * Sets the value of the p76 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP76()
         */
        public void setP76(BigDecimal value) {
            this.p76 = value;
        }

        /**
         * Kwota, o której mowa w art. 18d ust. 5a ustawy zwiększająca podstawę opodatkowania / zmniejszająca stratę
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP77() {
            return p77;
        }

        /**
         * Sets the value of the p77 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP77()
         */
        public void setP77(BigDecimal value) {
            this.p77 = value;
        }

        /**
         * Kwota przysługująca podatnikowi na podstawie art. 18da ust. 1 i 2 ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP78() {
            return p78;
        }

        /**
         * Sets the value of the p78 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP78()
         */
        public void setP78(BigDecimal value) {
            this.p78 = value;
        }

        /**
         * Kwota podlegająca zwrotowi do urzędu skarbowego na podstawie art. 18da ust. 5a ustawy
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP79() {
            return p79;
        }

        /**
         * Sets the value of the p79 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP79()
         */
        public void setP79(BigDecimal value) {
            this.p79 = value;
        }

        /**
         * Odliczenia z tytułu prac rozwojowych
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP80() {
            return p80;
        }

        /**
         * Sets the value of the p80 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP80()
         */
        public void setP80(BigDecimal value) {
            this.p80 = value;
        }

        /**
         * Badania podstawowe
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP81() {
            return p81;
        }

        /**
         * Sets the value of the p81 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP81()
         */
        public void setP81(BigDecimal value) {
            this.p81 = value;
        }

        /**
         * Badania aplikacyjne
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP82() {
            return p82;
        }

        /**
         * Sets the value of the p82 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP82()
         */
        public void setP82(BigDecimal value) {
            this.p82 = value;
        }

        /**
         * Odliczenia z tytułu uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP83() {
            return p83;
        }

        /**
         * Sets the value of the p83 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP83()
         */
        public void setP83(BigDecimal value) {
            this.p83 = value;
        }

        /**
         * Nazwa pełna
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getP84() {
            return p84;
        }

        /**
         * Sets the value of the p84 property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getP84()
         */
        public void setP84(String value) {
            this.p84 = value;
        }

        /**
         * Identyfikator podatkowy NIP
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getP85() {
            return p85;
        }

        /**
         * Sets the value of the p85 property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getP85()
         */
        public void setP85(String value) {
            this.p85 = value;
        }

        /**
         * Spółka jest mikroprzedsiębiorcą, małym lub średnim przedsiębiorcą w rozumieniu odrębnych przepisów: 1 - tak, 2 - nie
         * 
         * @return
         *     possible object is
         *     {@link Byte }
         *     
         */
        public Byte getP86() {
            return p86;
        }

        /**
         * Sets the value of the p86 property.
         * 
         * @param value
         *     allowed object is
         *     {@link Byte }
         *     
         * @see #getP86()
         */
        public void setP86(Byte value) {
            this.p86 = value;
        }

        /**
         * Odliczenia z tytułu prac rozwojowych
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP87() {
            return p87;
        }

        /**
         * Sets the value of the p87 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP87()
         */
        public void setP87(BigDecimal value) {
            this.p87 = value;
        }

        /**
         * Badania podstawowe
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP88() {
            return p88;
        }

        /**
         * Sets the value of the p88 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP88()
         */
        public void setP88(BigDecimal value) {
            this.p88 = value;
        }

        /**
         * Badania aplikacyjne
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP89() {
            return p89;
        }

        /**
         * Sets the value of the p89 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP89()
         */
        public void setP89(BigDecimal value) {
            this.p89 = value;
        }

        /**
         * Odliczenia z tytułu uzyskania i utrzymania patentu, prawa ochronnego na wzór użytkowy, prawa z rejestracji wzoru przemysłowego
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getP90() {
            return p90;
        }

        /**
         * Sets the value of the p90 property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         * @see #getP90()
         */
        public void setP90(BigDecimal value) {
            this.p90 = value;
        }

        /**
         * Badania naukowe: 1 - tak, 2 - nie
         * 
         */
        public byte getP91() {
            return p91;
        }

        /**
         * Sets the value of the p91 property.
         * 
         */
        public void setP91(byte value) {
            this.p91 = value;
        }

        /**
         * Prace rozwojowe: 1 - tak, 2 - nie
         * 
         */
        public byte getP92() {
            return p92;
        }

        /**
         * Sets the value of the p92 property.
         * 
         */
        public void setP92(byte value) {
            this.p92 = value;
        }

        /**
         * Rodzaj badań naukowych: 1 - badania podstawowe
         * 
         * @return
         *     possible object is
         *     {@link Byte }
         *     
         */
        public Byte getP931() {
            return p931;
        }

        /**
         * Sets the value of the p931 property.
         * 
         * @param value
         *     allowed object is
         *     {@link Byte }
         *     
         * @see #getP931()
         */
        public void setP931(Byte value) {
            this.p931 = value;
        }

        /**
         * Rodzaj badań naukowych: 1 - badania aplikacyjne
         * 
         * @return
         *     possible object is
         *     {@link Byte }
         *     
         */
        public Byte getP932() {
            return p932;
        }

        /**
         * Sets the value of the p932 property.
         * 
         * @param value
         *     allowed object is
         *     {@link Byte }
         *     
         * @see #getP932()
         */
        public void setP932(Byte value) {
            this.p932 = value;
        }

        /**
         * F. Dane jednostki naukowej
         * 
         * Gets the value of the pf property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the pf property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getPF().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link PF }
         * </p>
         * 
         * 
         * @return
         *     The value of the pf property.
         */
        public List<PF> getPF() {
            if (pf == null) {
                pf = new ArrayList<>();
            }
            return this.pf;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <sequence>
         *         <element name="P_F94">
         *           <simpleType>
         *             <restriction base="{http://www.w3.org/2001/XMLSchema}token">
         *               <minLength value="1"/>
         *               <maxLength value="240"/>
         *             </restriction>
         *           </simpleType>
         *         </element>
         *         <element name="P_F95A" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2023/09/06/eD/KodyKrajow/}TKodKraju"/>
         *         <element name="P_F96" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
         *         <element name="P_F97" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
         *         <element name="P_F98" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TJednAdmin" minOccurs="0"/>
         *         <element name="P_F99" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TUlica" minOccurs="0"/>
         *         <element name="P_F100" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrBudynku" minOccurs="0"/>
         *         <element name="P_F101" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TNrLokalu" minOccurs="0"/>
         *         <element name="P_F102" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TMiejscowosc"/>
         *         <element name="P_F103" type="{http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2022/09/13/eD/DefinicjeTypy/}TKodPocztowy" minOccurs="0"/>
         *       </sequence>
         *       <attribute name="typ" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" fixed="G" />
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "pf94",
            "pf95A",
            "pf96",
            "pf97",
            "pf98",
            "pf99",
            "pf100",
            "pf101",
            "pf102",
            "pf103"
        })
        public static class PF {

            /**
             * Nazwa pełna
             * 
             */
            @XmlElement(name = "P_F94", required = true)
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            protected String pf94;
            /**
             * Kod kraju
             * 
             */
            @XmlElement(name = "P_F95A", required = true)
            @XmlSchemaType(name = "normalizedString")
            protected TKodKraju pf95A;
            /**
             * Województwo
             * 
             */
            @XmlElement(name = "P_F96")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf96;
            /**
             * Powiat
             * 
             */
            @XmlElement(name = "P_F97")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf97;
            /**
             * Gmina
             * 
             */
            @XmlElement(name = "P_F98")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf98;
            /**
             * Ulica
             * 
             */
            @XmlElement(name = "P_F99")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf99;
            /**
             * Nr domu
             * 
             */
            @XmlElement(name = "P_F100")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf100;
            /**
             * Nr lokalu
             * 
             */
            @XmlElement(name = "P_F101")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf101;
            /**
             * Miejscowość
             * 
             */
            @XmlElement(name = "P_F102", required = true)
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf102;
            /**
             * Kod pocztowy
             * 
             */
            @XmlElement(name = "P_F103")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "token")
            protected String pf103;
            @XmlAttribute(name = "typ", required = true)
            @XmlSchemaType(name = "anySimpleType")
            protected String typ;

            /**
             * Nazwa pełna
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF94() {
                return pf94;
            }

            /**
             * Sets the value of the pf94 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF94()
             */
            public void setPF94(String value) {
                this.pf94 = value;
            }

            /**
             * Kod kraju
             * 
             * @return
             *     possible object is
             *     {@link TKodKraju }
             *     
             */
            public TKodKraju getPF95A() {
                return pf95A;
            }

            /**
             * Sets the value of the pf95A property.
             * 
             * @param value
             *     allowed object is
             *     {@link TKodKraju }
             *     
             * @see #getPF95A()
             */
            public void setPF95A(TKodKraju value) {
                this.pf95A = value;
            }

            /**
             * Województwo
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF96() {
                return pf96;
            }

            /**
             * Sets the value of the pf96 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF96()
             */
            public void setPF96(String value) {
                this.pf96 = value;
            }

            /**
             * Powiat
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF97() {
                return pf97;
            }

            /**
             * Sets the value of the pf97 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF97()
             */
            public void setPF97(String value) {
                this.pf97 = value;
            }

            /**
             * Gmina
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF98() {
                return pf98;
            }

            /**
             * Sets the value of the pf98 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF98()
             */
            public void setPF98(String value) {
                this.pf98 = value;
            }

            /**
             * Ulica
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF99() {
                return pf99;
            }

            /**
             * Sets the value of the pf99 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF99()
             */
            public void setPF99(String value) {
                this.pf99 = value;
            }

            /**
             * Nr domu
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF100() {
                return pf100;
            }

            /**
             * Sets the value of the pf100 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF100()
             */
            public void setPF100(String value) {
                this.pf100 = value;
            }

            /**
             * Nr lokalu
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF101() {
                return pf101;
            }

            /**
             * Sets the value of the pf101 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF101()
             */
            public void setPF101(String value) {
                this.pf101 = value;
            }

            /**
             * Miejscowość
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF102() {
                return pf102;
            }

            /**
             * Sets the value of the pf102 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF102()
             */
            public void setPF102(String value) {
                this.pf102 = value;
            }

            /**
             * Kod pocztowy
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPF103() {
                return pf103;
            }

            /**
             * Sets the value of the pf103 property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPF103()
             */
            public void setPF103(String value) {
                this.pf103 = value;
            }

            /**
             * Gets the value of the typ property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTyp() {
                if (typ == null) {
                    return "G";
                } else {
                    return typ;
                }
            }

            /**
             * Sets the value of the typ property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setTyp(String value) {
                this.typ = value;
            }

        }

    }

}
